# Delete entries from $HISTFILE using fzf, works like ^R history widget
# Got this gem from https://github.com/junegunn/fzf/issues/3522#issuecomment-1872415948
hist_delete_fzf() {
  local +h HISTORY_IGNORE=
  local -a ignore
  fc -pa "$HISTFILE"
  selection=$(fc -rl 1 |
  		awk '{ cmd=$0; sub(/^[ \t]*[0-9]+\**[ \t]+/, "", cmd); if (!seen[cmd]++)  print $0}' |
  		fzf --multi --bind 'enter:become:echo {+f1}')
  if [ -n "$selection" ]; then
  	while IFS= read -r line; do ignore+=("${(b)history[$line]}"); done < "$selection"
  	HISTORY_IGNORE="(${(j:|:)ignore})"
  	# Write history excluding lines that match `$HISTORY_IGNORE` and read new history.
  	fc -W && fc -p "$HISTFILE"
  else
  	echo "nothing deleted from history"
  fi
}
zle -N hist_delete_fzf

change_terminal_colorscheme() {
	zsh-sync-colors.sh
}
zle -N change_terminal_colorscheme


list_oldfiles() {
  #local files=($(find . -type d \( -name ".git" -o -name "node_modules" \) -prune -o -type f -print | \
  local files=($(nvim -u NONE --headless +'lua io.write(table.concat(vim.v.oldfiles, "\n") .. "\n")' +qa | \
    grep -v "oil://" | \
    grep -v "diffview://" | \
    grep -v "\[Preview\]" | \
    grep -Ev '(^.*\.(tmp|swp|swo)$|~$|/tmp/)' | \
    fzf --multi \
        --preview 'bat --style=numbers --color=always --line-range=:500 {}' \
        --preview-window=right:50%:wrap \
        --height=65% \
        --layout=reverse \
        --border=none))

  [[ ${#files[@]} -gt 0 ]] && nvim "${files[@]}"
}

zle -N list_oldfiles

fg_widget() {
  fg
}

zle -N fg_widget
